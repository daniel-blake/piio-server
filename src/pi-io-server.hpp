#ifndef __MC_HID_SERVER_HPP
#define __MC_HID_SERVER_HPP

#include <stdint.h>
#include <dbus-c++/dbus.h>
#include <boost/signals2.hpp>
#include <libconfig.h++>

#include "pi-io-server-glue.hpp"
#include "gpioregistry.hpp"
#include "iogroup-base.hpp"
#include "iogroup-digital.hpp"

#include "gpio/gpio.hpp"
#include "mcp23017/mcp23017.hpp"
#include "thread/thread.hpp"
#include "buttontimer/buttontimer.hpp"

class PiIoServer 
  : public nl::miqra::PiIo_adaptor, // << This will be generated by the makefile using dbusxx-xml2cpp on mc-hid-introspect.xml
  public DBus::IntrospectableAdaptor,
  public DBus::ObjectAdaptor
{
public:

    PiIoServer(DBus::Connection &connection,libconfig::Config &config);
    ~PiIoServer();

    virtual std::vector< ::DBus::Path > IoGroups();

private:
    GpioRegistry * gpioRegistry;
    std::set<IoGroupBase*> iogroups;
    
    void initHardware(libconfig::Config &config);
    IoGroupBase* createIoGroup(libconfig::Setting &setting);

    void criticalError(IoGroupBase * sender, std::string message);
    void buttonPress(IoGroupDigital* sender, std::string handle);

    void buttonHold(IoGroupDigital* sender, std::string handle);
    void inputChanged(IoGroupDigital* sender, std::string handle , bool value);

    void mbInputChanged(IoGroupDigital*, std::string, uint32_t value);

};

#endif//__MC_HID_SERVER_HPP